{
    "version": "0.1.0",
    "command": "make",
    "showOutput": "always",
    "tasks": [{
        "taskName": "clean"
    }, {
        "taskName": "debug",
        "suppressTaskName": true,
        "args": [
            "${fileBasenameNoExtension}.debug"
        ],
        "problemMatcher": {
            "fileLocation": "relative",
            "owner": "ocaml",
            "pattern": [{
                "regexp": "^File \"(.*)\", line (\\d+)(?:, characters (\\d+)-(\\d+))?:$",
                "file": 1,
                "line": 2,
                "column": 3,
                "endColumn": 4
            }, {
                "regexp": "^(?:(?:Parse\\s+)?(Warning|[Ee]rror)(?:\\s+\\d+)?:)?\\s+(.*)$",
                "severity": 1,
                "message": 2,
                "loop": true
            }]
        }
    }, {
        "taskName": "native",
        "suppressTaskName": true,
        "args": [
            "${fileBasenameNoExtension}.native"
        ],
        "problemMatcher": {
            "fileLocation": "relative",
            "owner": "ocaml",
            "pattern": [{
                "regexp": "^File \"(.*)\", line (\\d+)(?:, characters (\\d+)-(\\d+))?:$",
                "file": 1,
                "line": 2,
                "column": 3,
                "endColumn": 4
            }, {
                "regexp": "^(?:(?:Parse\\s+)?(Warning|[Ee]rror)(?:\\s+\\d+)?:)?\\s+(.*)$",
                "severity": 1,
                "message": 2,
                "loop": true
            }]
        }
    }, {
        "taskName": "byte",
        "suppressTaskName": true,
        "args": [
            "${fileBasenameNoExtension}.byte"
        ],
        "problemMatcher": {
            "fileLocation": "relative",
            "owner": "ocaml",
            "pattern": [{
                "regexp": "^File \"(.*)\", line (\\d+)(?:, characters (\\d+)-(\\d+))?:$",
                "file": 1,
                "line": 2,
                "column": 3,
                "endColumn": 4
            }, {
                "regexp": "^(?:(?:Parse\\s+)?(Warning|[Ee]rror)(?:\\s+\\d+)?:)?\\s+(.*)$",
                "severity": 1,
                "message": 2,
                "loop": true
            }]
        }
    }]
}